{
  "hash": "a55e99f1e41d7029f14413a88cc5b56e",
  "result": {
    "markdown": "---\ntitle: 'Going the Distance!'\ndate: 06-06-2021\ndescription: \"A practical guide to measuring distance using Google Maps in R.\"\nauthor: \n    - name: Adam D McKinnon\ncategories: [Google Maps, googleway, echarts4r, R]\nimage: \"emile-seguin-wf5ZJ2s-B7I-unsplash.jpg\"\ntitle-block-banner: true\n---\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Photo by [Émile Séguin](https://unsplash.com/@emileseguin) on [Unsplash](https://unsplash.com/).](emile-seguin-wf5ZJ2s-B7I-unsplash.jpg){width=100%}\n:::\n:::\n\n\n\n# Introduction\nTwo years ago I sat in an elevated office in Germany discussing with a colleague the value of knowing someone’s commute distance to inform their voluntary departure risk. When we worked on generating this variable neither of us could do it! Our flight risk model progressed without this variable. Months later a pandemic hit and the conversation has since (understandably) been firmly ensconced in remote and hybrid models of working. However, many sectors remain sensitive to the need to interact in person. Hospitality, Tourism and to a varying extent Retail, are indicative of this requirement. \n\nIt was therefore, interesting when two years later, a bit more experience under my belt (i.e., mistakes that I had learned from), I was again presented this challenge. The context was simple, a retail business was moving location and wanted to know which employees were likely to be adversely impacted. This information was to be used to inform communication efforts in advance of the move. \n\nThe following provides a practical guide to measuring distances using Google Maps in R. The process involves the following steps:\n\n1. Calling Google Maps,\n\n2. Unpacking the returned data,\n\n3. Generating insights.\n\n<br>\n\n## 1.\tCalling Google Maps\n\nTo use Google Maps you will need three things:\n\ni.\t**Address data.** We begin by loading some fictitious address data provided by the Victorian State Government – School addresses from 2015.\n\nii.\t**Workplace addresses**, both an old workplace address and a new workplace address. For this example, I am using the following two addresses from Victoria, Australia:\n\n\n> a. Old workplace address: 154 High St, Ashburton VIC 3147, Australia (Ashburton Public Library); and \n\n> b. New workplace address: Spring St, East Melbourne VIC 3002, Australia (Victorian Parliament Building).\n\n\niii.\t**A Google Maps API key**, which can be set up on the [Google Maps Developer Site](https://developers.google.com/maps). The Google Maps service has a free usage quota. To access Google Maps we will use the googleway library in R.\n\nWith all three pieces ready, we will then call Google Maps using the googleway::google_distance function. We will do this for two modes of transit:\n\n1.\tPublic Transport (called \"Transit\") &\n\n2.\tCar.\n\n\n\n\n::: {.cell code_folding='true'}\n\n```{.r .cell-code}\n# Libraries\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(stringr)\nlibrary(rrapply)\n\nlibrary(googleway)\nlibrary(purrr)\nlibrary(echarts4r)\nlibrary(reactable)\n\n\n\n# # Set API key ----\nkey = my_api_key # enter your API key here\n  \n# Import Data ----\noriginal_locations_tbl <- readr::read_csv(file =\n\"http://www.education.vic.gov.au/Documents/about/research/datavic/dv165-allschoolslocationlist2015.csv\") %>% \n                          janitor::clean_names()\n\n\n\n# limit the address data to schools in the Greater Melbourne local government area's\ncouncils <- c(\"Bayside (C)\", \"Port Phillip (C)\", \"Stonnington (C)\", \"Casey (C)\", \"Melbourne (C)\", \n              \"Frankston (C)\", \"Glen Eira (C)\", \"Monash (C)\", \"Yarra (C)\", \"Moonee Valley (C)\")\n\n\n# create an address dataset\naddresses_tbl <- original_locations_tbl %>% \n  \n  # create and format the home address field, and create the old and new workplace addresses\n  dplyr::mutate(\n    home_address = base::paste0(address_line_1, \", \", address_town, \" \", address_state, \" \",address_postcode),\n    old_work_address = \"154 High St, Ashburton VIC 3147\",\n    new_work_address = \"Spring St, East Melbourne VIC 3002\",\n    employee         = paste0(\"Employee \", row_number())  \n    ) %>% \n  \n  # only include addresses from areas around Melbourne\n  dplyr::filter(lga_name %in% councils) %>% \n  \n  # randomly select 100 records\n  dplyr::sample_n(100) %>% \n  \n  dplyr::select(employee, home_address, old_work_address, new_work_address)\n  \n\n\n# check the dataset\n# head(addresses_tbl)\n\n\n# call Google Maps using googleway to calculate the distance and time for the old and new workplace locations\n# the calculations are repeated for both public transport and car modes of transport\ncommute_tbl <- addresses_tbl %>%\n\n  dplyr::mutate(\n        old_transit_calculations = purrr::map2(.x = home_address,\n                                               .y = old_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"transit\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        new_transit_calculations = purrr::map2(.x = home_address,\n                                               .y = new_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"transit\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        old_car_calculations     = purrr::map2(.x = home_address,\n                                               .y = old_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"driving\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        new_car_calculations     = purrr::map2(.x = home_address,\n                                               .y = new_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"driving\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE))\n\n    )\n```\n:::\n\n\n\n<br>\n\n## 2. Unpacking the Data\n\nThe data returned from the google_distance function is complicated! Consequently, it required some fiddling to unpack and format in a usable fashion. While the approach developed works, I strongly suspect it could be better. Searching online has yielded several alternatives. However, I decided to stay with my own and welcome suggested improvements. \n\n\n\n\n\n::: {.cell code_folding='true'}\n\n```{.r .cell-code}\n# cleaning function for results\nresults_cleaner <- function(data, old_or_new, car_or_transit){\n    \n    # for renaming multiple variables from the API call\n    var_string <- paste0(old_or_new, \"_\", car_or_transit, \"_\")\n    # for renaming the status field\n    new_name   <- paste0(var_string, \"status\")\n    \n    # receive the data\n    data |> \n        rrapply::rrapply(how = \"bind\") |> \n        janitor::clean_names() |> \n        dplyr::select(-1, -2, -7) |> # remove the last two columns\n        dplyr::rename_at(vars(starts_with(\"rows_elements_1_\")), ~ str_replace_all(., \n                                                                              pattern     = \"rows_elements_1_\",\n                                                                              replacement = var_string) \n                                                                              ) |> \n        dplyr::rename( !! quo_name(new_name) := status)\n        \n}\n\n\n# clean the final results for the old commute by public transport\nold_transit_commute_tbl <- commute_tbl %>%\n    dplyr::select(old_transit_calculations) %>%\n    results_cleaner(old_or_new = \"old\", car_or_transit = \"transit\")\n\n\n# clean the final results for the new commute by public transport\nnew_transit_commute_tbl <- commute_tbl %>%\n    dplyr::select(new_transit_calculations) %>%\n    results_cleaner(old_or_new = \"new\", car_or_transit = \"transit\")\n\n# clean the final results for the old commute by car\nold_car_commute_tbl <- commute_tbl %>%\n    dplyr::select(old_car_calculations) %>%\n    results_cleaner(old_or_new = \"old\", car_or_transit = \"car\")\n\n\n# clean the final results for the old commute by car\nnew_car_commute_tbl <- commute_tbl %>%\n    dplyr::select(new_car_calculations) %>%\n    results_cleaner(old_or_new = \"new\", car_or_transit = \"car\")\n\n\n\n\n# connect the original data with the new clean distance and time results\ntotal_commute_tbl <- addresses_tbl %>%\n    dplyr::bind_cols(old_transit_commute_tbl) %>% # add the columns of the old commute by public transport\n    dplyr::bind_cols(new_transit_commute_tbl) %>% # add the columns of the new commute by public transport\n    dplyr::bind_cols(old_car_commute_tbl) %>% # add the columns of the old commute by car\n    dplyr::bind_cols(new_car_commute_tbl) %>% # add the columns of the new commute by car\n\n    # filter out any results that were not OK\n    dplyr::filter(old_transit_status == \"OK\" | \n                  new_transit_status == \"OK\" | \n                  old_car_status     == \"OK\" | \n                  new_car_status     == \"OK\")\n```\n:::\n\n\n\n<br>\n\n## 3.\tCreating Insights\n\nThe data returned from googleway provides both the travel distance between the two points, and time required to complete the trip for the selected mode of transit. From here it is important to gauge the following:\n\n<br>\n\n#### 1. Are people generally better off travelling to the new office location? \n\nThis can be examined by both distance and time. However, in a city a short trip can still take considerable time. Therefore, examining the difference in time taken for the shortest option (i.e., car or public transport) appears more realistic / accurate. If the time decreased by more than 5 minutes, an improvement in commute is assumed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate value in Minutes (default results are in seconds)\nscale_mins <- function(x){\n  x <- x / 60 \n  round(x, digits = 0)\n}\n\n\n# calculate value in Kilometres (default results are in metres)\nscale_kms <- function(x){\n  x <- x / 1000\n  round(x, digits = 1)\n} \n\n\n\n\nfinal_commute_details_tbl <- total_commute_tbl |> \n    \n    # covert all duration variable values to minutes\n    dplyr::mutate_at(vars(ends_with(\"duration_value\")), scale_mins) %>% \n    \n      \n    # covert all distance variable values to kilometres\n    dplyr::mutate_at(vars(ends_with(\"distance_value\")), scale_kms) %>% \n  \n    # calculate the difference in distance and time between the new and old locations\n    # NOTE: calculations are based on new - old. Therefore, negative numbers indicate less distance and time, \n    # whereas positive numbers indicate an increase in distance and time\n    dplyr::mutate(\n        diff_transit_commute_distance = new_transit_distance_value - old_transit_distance_value,\n        diff_transit_commute_time     = new_transit_duration_value - old_transit_duration_value,\n        diff_car_commute_distance     = new_car_distance_value - old_car_distance_value,\n        diff_car_commute_time         = new_car_duration_value - old_car_duration_value,\n\n        # find the shortest time (i.e., transit or car) for both the old and new offices\n        old_office_min_mins = base::ifelse(old_transit_duration_value < old_car_duration_value, \n                                           old_transit_duration_value, old_car_duration_value),\n        new_office_min_mins = base::ifelse(new_transit_duration_value < new_car_duration_value, \n                                           new_transit_duration_value, new_car_duration_value),\n        \n        # find the differences in the best commute times between the two locations\n        new_office_best_commute_diff = new_office_min_mins - old_office_min_mins,\n        \n        # find which is the better commute for each person (new office, old office, or similar). This assumes \n        # that a commute is better if the commute time is reduced by more than 5 minutes\n        preferred_commute_location   = dplyr::case_when((old_office_min_mins - new_office_min_mins) < -5 ~ \"Old Office\",\n                                                        (new_office_min_mins - old_office_min_mins) < -5 ~ \"New Office\",\n                                                        TRUE ~ \"Similar Commute\"),\n        \n        # determine the best mode of transport for the new location\n        preferred_mode_transport     = base::ifelse(new_transit_duration_value <= new_car_duration_value, \"Public Transport\", \"Car\")\n                                        \n        )\n\n\n# visually represent the impact of the new location to travel time\nfinal_commute_details_tbl %>% \n  dplyr::count(preferred_commute_location) %>% \n  echarts4r::e_chart(preferred_commute_location) %>% \n  echarts4r::e_bar(n) %>% \n  echarts4r::e_labels(position = \"insideTop\") %>% \n  echarts4r::e_legend(show = FALSE) %>% \n  echarts4r::e_title(text = \"Preferred Office Location Based on Travel Time\",\n                     \"Preferred Location Is Defined by A Reduction In Travel Time Of More Than 5 Minutes\",\n                     left = \"10%\") %>% \n  echarts4r::e_tooltip() \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-096c02bc0e8ac281a8d3\" style=\"width:100%;height:500px;\" class=\"echarts4r html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-096c02bc0e8ac281a8d3\">{\"x\":{\"theme\":\"\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"yAxis\":[{\"show\":true}],\"xAxis\":[{\"data\":[\"New Office\",\"Old Office\",\"Similar Commute\"],\"type\":\"category\",\"boundaryGap\":true}],\"legend\":{\"data\":[\"n\"],\"show\":false,\"type\":\"plain\"},\"series\":[{\"data\":[{\"value\":[\"New Office\",\"13\"]},{\"value\":[\"Old Office\",\"61\"]},{\"value\":[\"Similar Commute\",\"26\"]}],\"name\":\"n\",\"type\":\"bar\",\"yAxisIndex\":0,\"xAxisIndex\":0,\"coordinateSystem\":\"cartesian2d\",\"label\":{\"show\":true,\"position\":\"insideTop\"}}],\"title\":[{\"left\":\"10%\",\"text\":\"Preferred Office Location Based on Travel Time\",\"subtext\":\"Preferred Location Is Defined by A Reduction In Travel Time Of More Than 5 Minutes\"}],\"tooltip\":{\"trigger\":\"item\"}},\"dispose\":true},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nThe visualisation above depicts how the location change will impact employee travel, and it appears the majority of individuals will be worse off when commuting to the new location.  \n\n<br>\n\n#### 2. Which individuals will have shorter or longer travel times?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_commute_details_tbl %>% \n  \n  # select the preferred variables\n  dplyr::select(employee, home_address, preferred_commute_location, new_office_best_commute_diff,preferred_mode_transport, \n                new_transit_duration_value, diff_transit_commute_time, new_car_duration_value, \n                diff_car_commute_time) %>% \n  \n    dplyr::arrange(new_office_best_commute_diff) %>% \n  \n  # rename the variables for more readable output\n  dplyr::rename(\n                Employee = employee,\n                `Home Address`= home_address,\n                `Preferred Office` = preferred_commute_location,\n                `Commute Change (Mins)` = new_office_best_commute_diff,\n                `Preferred Transport for New Office` = preferred_mode_transport,\n                `Time via Public Transport (Mins)` = new_transit_duration_value,\n                `Public Transport Time Saving (Mins)` = diff_transit_commute_time,\n                `Time via Car (Mins)` = new_car_duration_value,\n                `Car Time Saving (Mins)` = diff_car_commute_time) %>% \n  \n  reactable::reactable(\n    # pagination and searching options\n    showPageSizeOptions = TRUE,\n    pageSizeOptions = c(5, 10, 25, 50, 100),\n    defaultPageSize = 5,\n    \n    # table formatting options\n    outlined = TRUE,\n    borderless = TRUE,\n    striped = TRUE,\n    resizable = TRUE,\n\n    # column width\n    columns = list(\n      Employee = reactable::colDef(minWidth = 150),\n      `Home Address` = reactable::colDef(minWidth = 175),\n      `Preferred Office` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Commute Change (Mins)` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Preferred Transport for New Office`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Time via Public Transport (Mins)`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Public Transport Time Saving (Mins)`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Time via Car (Mins)` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Car Time Saving (Mins)`= reactable::colDef(minWidth = 150, align = \"center\")\n    ),\n    \n    # theming changes    \n    theme = reactable::reactableTheme(\n      highlightColor = \"#f0f5f9\",\n      cellPadding = \"8px 12px\",\n      style = list(fontFamily = \"-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif\"))\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-f7cc6b788912aba98d10\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f7cc6b788912aba98d10\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Employee\":[\"Employee 2178\",\"Employee 437\",\"Employee 2174\",\"Employee 2041\",\"Employee 2193\",\"Employee 53\",\"Employee 229\",\"Employee 1800\",\"Employee 2221\",\"Employee 2179\",\"Employee 326\",\"Employee 2112\",\"Employee 1555\",\"Employee 706\",\"Employee 600\",\"Employee 2214\",\"Employee 30\",\"Employee 1056\",\"Employee 1601\",\"Employee 640\",\"Employee 953\",\"Employee 72\",\"Employee 932\",\"Employee 1884\",\"Employee 1293\",\"Employee 1807\",\"Employee 1831\",\"Employee 827\",\"Employee 644\",\"Employee 643\",\"Employee 1358\",\"Employee 1310\",\"Employee 482\",\"Employee 1558\",\"Employee 1589\",\"Employee 1732\",\"Employee 1901\",\"Employee 1751\",\"Employee 1554\",\"Employee 1782\",\"Employee 442\",\"Employee 1703\",\"Employee 1834\",\"Employee 578\",\"Employee 937\",\"Employee 1184\",\"Employee 1482\",\"Employee 1011\",\"Employee 974\",\"Employee 2164\",\"Employee 1083\",\"Employee 649\",\"Employee 1086\",\"Employee 1105\",\"Employee 890\",\"Employee 1691\",\"Employee 701\",\"Employee 1904\",\"Employee 1029\",\"Employee 2129\",\"Employee 1422\",\"Employee 284\",\"Employee 968\",\"Employee 1255\",\"Employee 2103\",\"Employee 1524\",\"Employee 488\",\"Employee 1458\",\"Employee 876\",\"Employee 1285\",\"Employee 1505\",\"Employee 329\",\"Employee 10\",\"Employee 1398\",\"Employee 752\",\"Employee 750\",\"Employee 1074\",\"Employee 1953\",\"Employee 1141\",\"Employee 1874\",\"Employee 1495\",\"Employee 1163\",\"Employee 1190\",\"Employee 2198\",\"Employee 1541\",\"Employee 591\",\"Employee 1860\",\"Employee 1171\",\"Employee 1766\",\"Employee 2076\",\"Employee 726\",\"Employee 2219\",\"Employee 1758\",\"Employee 657\",\"Employee 1357\",\"Employee 1265\",\"Employee 693\",\"Employee 735\",\"Employee 552\",\"Employee 2066\"],\"Home Address\":[\"185 Spring Street, MELBOURNE VIC 3000\",\"215 Rathdowne Street, Carlton VIC 3053\",\"Level 2, 123 Lonsdale Street, MELBOURNE VIC 3000\",\"597 Brunswick Street, FITZROY NORTH VIC 3068\",\"96 Barkly Street, NORTH FITZROY VIC 3068\",\"319 George Street, Fitzroy VIC 3065\",\"210 Errol Street, North Melbourne VIC 3051\",\"399 Lonsdale Street, MELBOURNE VIC 3000\",\"385 Queensberry Street, NORTH MELBOURNE VIC 3051\",\"Level 6, 152-168 Elizabeth Street, MELBOURNE VIC 3000\",\"Lithgow Street, Abbotsford VIC 3067\",\"12 - 18 Old Heidelberg Road, ALPHINGTON VIC 3078\",\"8-14 Brougham Street, MELBOURNE NORTH VIC 3051\",\"50 Flemington Street, Flemington VIC 3031\",\"597 St Kilda Road, Melbourne VIC 3004\",\"355 St Kilda Road, MELBOURNE VIC 3004\",\"Mt Alexander Road, Flemington VIC 3031\",\"68-76 Davison Street, Richmond VIC 3121\",\"677 Punt Road, SOUTH YARRA VIC 3141\",\"87 Wilson Street, Moonee Ponds VIC 3039\",\"1 Tasma Street, Ascot Vale VIC 3032\",\"601 Punt Road, South Yarra VIC 3141\",\"100 Victoria Street, Flemington VIC 3031\",\"29 Fawkner Street, ABERFELDIE VIC 3040\",\"Cooper Street, Essendon VIC 3040\",\"41 Rosehill Road, ESSENDON VIC 3040\",\"6 Aberfeldie Street, ESSENDON VIC 3040\",\"Ronald Grove, Keilor East VIC 3033\",\"Langs Rd, Ascot Vale VIC 3032\",\"112 Keilor Road, Essendon North VIC 3041\",\"350-370 Kings Way, Melbourne VIC 3004\",\"101 Glenhuntly Road, Elwood VIC 3184\",\"415 Graham Street, Port Melbourne VIC 3207\",\"214 Dandenong Road, ST KILDA EAST VIC 3183\",\"80 Martin Street, BRIGHTON VIC 3186\",\"7 Wynnstay Road, PRAHRAN EAST VIC 3181\",\"2 Nagle Avenue, ELSTERNWICK VIC 3185\",\"59 Holyrood Street, HAMPTON VIC 3188\",\"217 Glen Eira Road, ST KILDA EAST VIC 3183\",\"28 Sandham Street, ELSTERNWICK VIC 3185\",\"9-23 Densham Road, Armadale VIC 3143\",\"163 South Rd, BRIGHTON EAST VIC 3187\",\"453 Bluff Road, HAMPTON VIC 3188\",\"Arkaringa Crescent, Black Rock VIC 3193\",\"14 Naranga Crescent, Frankston VIC 3199\",\"15 Silky Oak Drive, Cranbourne VIC 3977\",\"Amberly Park Drive, Narre Warren Sth VIC 3805\",\"71 Scotsburn Way, Endeavour Hills VIC 3802\",\"Sassafras Drive, Frankston VIC 3199\",\"103-129 Oak Grove Drive, NARRE WARREN SOUTH VIC 3805\",\"Bemersyde Drive, Berwick VIC 3806\",\"Somerville Road, Hampton Park VIC 3976\",\"Rowellyn Avenue, Carrum Downs VIC 3201\",\"Rosebank Drive, Cranbourne North VIC 3977\",\"Overport Road, Frankston South VIC 3199\",\"1318 High Street, MALVERN VIC 3144\",\"97 Fleetwood Drive, Narre Warren VIC 3805\",\"23 Police Road, MULGRAVE VIC 3170\",\"14-36 Lesdon Avenue, Cranbourne VIC 3977\",\"2 Ernst Wanke Road, NARRE WARREN NORTH VIC 3804\",\"80 Warrandyte Road, Langwarrin VIC 3910\",\"Spring Road, Malvern VIC 3144\",\"Franciscan Avenue, Frankston VIC 3199\",\"950 South Gippsland Highway, Cranbourne VIC 3977\",\"25 Broderick Road, CARRUM DOWNS VIC 3201\",\"50 Stately Drive, Cranbourne East VIC 3977\",\"Baxter-tooradin Road, Pearcedale VIC 3912\",\"Silvertop Street, Frankston North VIC 3200\",\"Hallifax Street, Seaford VIC 3198\",\"Manuka Road, Berwick VIC 3806\",\"74-84 Frawley Road, Hallam VIC 3803\",\"15-31 A'beckett Road, Narre  Warren  North VIC 3804\",\"37 Fairholme Boulevard, Berwick VIC 3806\",\"263 McCormicks Road, Carrum Downs VIC 3201\",\"Grange Street, Oakleigh South VIC 3167\",\"21 Mackie Road, Bentleigh East VIC 3165\",\"145 Coral Drive, Hampton Park VIC 3976\",\"Kernot Ave, MULGRAVE VIC 3170\",\"Albany Drive, Mulgrave VIC 3170\",\"113 Warrigal Road, HUGHESDALE VIC 3166\",\"1 Wellington Road, Monash University VIC 3800\",\"9 New Holland Drive, Cranbourne East VIC 3977\",\"70 Brookwater Parade, Lyndhurst VIC 3975\",\"1785 South Gippsland Hwy, CRANBOURNE VIC 3977\",\"10 - 16 Ranfurlie Crescent, GLEN IRIS VIC 3146\",\"Grange Road, Glen Huntly VIC 3163\",\"113 Oak Street, BEAUMARIS VIC 3193\",\"724 Glen Huntly Road, Caulfield South VIC 3162\",\"122 Jasper Road, BENTLEIGH VIC 3204\",\"77  Willesden Road, OAKLEIGH VIC 3166\",\"Abbotsford Avenue, Malvern East VIC 3145\",\"4-6 Roselea Street, CAULFIELD SOUTH VIC 3162\",\"77 Waimarie Drive, MT WAVERLEY VIC 3149\",\"Lloyd Street, Malvern East VIC 3145\",\"291a Mckinnon Road, Mckinnon VIC 3204\",\"Vivien St, Bentleigh East VIC 3165\",\"253 Tucker Road, Ormond VIC 3204\",\"16 Tucker Road, Bentleigh VIC 3204\",\"Hobart Road, Murrumbeena VIC 3163\",\"33 Raymond Street, ASHWOOD VIC 3147\"],\"Preferred Office\":[\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\"],\"Commute Change (Mins)\":[-15,-15,-14,-13,-13,-12,-11,-11,-11,-9,-8,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-3,-2,-2,-2,-2,-2,-2,-2,-1,0,1,2,3,4,5,5,5,6,7,7,8,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,14,15,15,15,16,16,16,18],\"Preferred Transport for New Office\":[\"Public Transport\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Public Transport\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\"],\"Time via Public Transport (Mins)\":[3,16,9,17,20,18,33,14,29,10,15,43,36,37,31,24,35,20,23,49,37,35,36,58,58,73,47,87,61,45,26,49,28,47,56,39,53,58,47,43,37,68,71,64,121,136,125,132,130,146,130,123,131,143,175,52,125,92,145,159,125,57,159,141,123,134,174,108,104,132,110,147,113,140,72,88,142,117,107,78,87,126,111,197,57,51,78,43,58,94,74,44,90,67,56,73,65,70,72,67],\"Public Transport Time Saving (Mins)\":[-53,-59,-53,-78,-78,-57,-45,-54,-44,-43,-44,-38,-50,-59,-63,-63,-59,-29,-53,-49,-54,-45,-59,-54,-54,-54,-54,-51,-58,-54,-63,-46,-50,-31,-30,-53,-35,-38,-36,-40,-52,-38,-38,-25,-11,-2,-16,-40,-11,-2,-32,-32,-40,-3,36,1,-31,-26,25,-11,-11,4,-15,28,-39,-3,-24,-40,-40,-31,-40,29,-32,-40,-33,-38,-32,-20,-20,-33,19,-3,-2,1,28,-34,-30,-62,-38,-20,33,-62,46,32,-38,-32,-32,-38,30,28],\"Time via Car (Mins)\":[3,7,4,10,13,8,12,8,10,10,10,17,15,18,14,14,17,12,11,22,20,12,18,28,28,30,27,27,23,26,15,23,20,19,25,18,26,31,23,24,19,31,31,37,47,44,40,35,44,42,40,36,44,44,47,18,40,30,43,36,47,18,47,41,43,49,50,44,44,43,34,40,43,41,27,27,41,28,30,22,27,49,40,53,18,24,42,28,30,23,21,28,25,21,30,32,30,34,24,24],\"Car Time Saving (Mins)\":[-15,-15,-14,-13,-13,-12,-11,-11,-11,-9,-8,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-3,-2,-2,-2,-2,-2,-2,-2,-1,0,1,2,3,4,5,5,5,6,7,7,8,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,14,15,15,15,16,16,16,18]},\"columns\":[{\"accessor\":\"Employee\",\"name\":\"Employee\",\"type\":\"character\",\"minWidth\":150},{\"accessor\":\"Home Address\",\"name\":\"Home Address\",\"type\":\"character\",\"minWidth\":175},{\"accessor\":\"Preferred Office\",\"name\":\"Preferred Office\",\"type\":\"character\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Commute Change (Mins)\",\"name\":\"Commute Change (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Preferred Transport for New Office\",\"name\":\"Preferred Transport for New Office\",\"type\":\"character\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Time via Public Transport (Mins)\",\"name\":\"Time via Public Transport (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Public Transport Time Saving (Mins)\",\"name\":\"Public Transport Time Saving (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Time via Car (Mins)\",\"name\":\"Time via Car (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Car Time Saving (Mins)\",\"name\":\"Car Time Saving (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"}],\"resizable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,25,50,100],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"outlined\":true,\"borderless\":true,\"striped\":true,\"theme\":{\"highlightColor\":\"#f0f5f9\",\"cellPadding\":\"8px 12px\",\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif\"}},\"dataKey\":\"1125dd0c2a37691b9b2e84d79daff1d4\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br>\n\nThe above table could readily be exported to Excel and delivered to Leaders, Managers, Transition Teams, HRBP's, etc., to help inform the delivery of personalised discussions with staff regarding proposed or upcoming changes. In addition, it could also help to inform the identification of voluntary flight risks, based on negative travel experiences associated with the move. Moreover, additional analyses could be performed on this data to help inform communication efforts (e.g., clustering to develop employee personas).\n\n<br>\n\n# Conclusion:\n\nI often try to think of ways to prompt people to reach out to the People Analytics team for advice or assistance. One quick-fire way, based on this experience, is through automation. If colleagues are having to do things manually more than a dozen times (i.e., look up commute times on Google Maps), its likely the People Analytics Team can help. While automating work is not necessarily a core remit of People Analytics Team’s, it can be a highly useful approach for building both credibility and goodwill among business colleagues (i.e., low actual effort, high perceived value), which can in turn lead to bigger opportunities for both parties. In addition, this approach (and related activities) represent useful activities that can be performed in support of new site selection during a due diligence phase (i.e., pre-selecting venues). \n\nIn this example we used a series of addresses to calculate travel distance and time between fictitious home and work addresses for different modes of transit. While using Google Maps programmatically is not without some learning required, I hope this example assists in making it more accessible to a broader range of users. Such functions can and should be used in advance of physical location changes to help proactively identify and mitigate distance-related challenges for all parties involved, both employees and consumers. \n\nHappy coding!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/echarts-en.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/ecStat.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/dataTool.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-binding-0.4.4/echarts4r.js\"></script>\n<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-17.0.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-17.0.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\n<script src=\"../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}