{
  "hash": "8074e87b6557cb8f20351cb22e5758eb",
  "result": {
    "markdown": "---\ntitle: 'Going the Distance!'\ndate: 06-06-2021\ndescription: \"A practical guide to measuring distance using Google Maps in R.\"\nauthor: \n    - name: Adam D McKinnon\ncategories: [Google Maps, googleway, echarts4r, R]\nimage: \"emile-seguin-wf5ZJ2s-B7I-unsplash.jpg\"\ntitle-block-banner: true\n---\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Photo by [Émile Séguin](https://unsplash.com/@emileseguin) on [Unsplash](https://unsplash.com/).](emile-seguin-wf5ZJ2s-B7I-unsplash.jpg){width=100%}\n:::\n:::\n\n\n# Introduction\n\nTwo years ago I sat in an elevated office in Germany discussing with a colleague the value of knowing someone's commute distance to inform their voluntary departure risk. When we worked on generating this variable neither of us could do it! Our flight risk model progressed without this variable. Months later a pandemic hit and the conversation has since (understandably) been firmly ensconced in remote and hybrid models of working. However, many sectors remain sensitive to the need to interact in person. Hospitality, Tourism and to a varying extent Retail, are indicative of this requirement.\n\nIt was therefore, interesting when two years later, a bit more experience under my belt (i.e., mistakes that I had learned from), I was again presented this challenge. The context was simple, a retail business was moving location and wanted to know which employees were likely to be adversely impacted. This information was to be used to inform communication efforts in advance of the move.\n\nThe following provides a practical guide to measuring distances using Google Maps in R. The process involves the following steps:\n\n1.  Calling Google Maps,\n\n2.  Unpacking the returned data,\n\n3.  Generating insights.\n\n<br>\n\n## 1. Calling Google Maps\n\nTo use Google Maps you will need three things:\n\ni.  **Address data.** We begin by loading some fictitious address data provided by the Victorian State Government -- School addresses from 2015.\n\nii. **Workplace addresses**, both an old workplace address and a new workplace address. For this example, I am using the following two addresses from Victoria, Australia:\n\n> a.  Old workplace address: 154 High St, Ashburton VIC 3147, Australia (Ashburton Public Library); and\n\n> b.  New workplace address: Spring St, East Melbourne VIC 3002, Australia (Victorian Parliament Building).\n\niii. **A Google Maps API key**, which can be set up on the [Google Maps Developer Site](https://developers.google.com/maps). The Google Maps service has a free usage quota. To access Google Maps we will use the googleway library in R.\n\nWith all three pieces ready, we will then call Google Maps using the googleway::google_distance function. We will do this for two modes of transit:\n\n1.  Public Transport (called \"Transit\") &\n\n2.  Car.\n\n\n::: {.cell code_folding='true'}\n\n```{.r .cell-code}\n# Libraries\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(stringr)\nlibrary(rrapply)\n\nlibrary(googleway)\nlibrary(purrr)\nlibrary(echarts4r)\nlibrary(reactable)\n\n\n\n# # Set API key ----\nkey = my_api_key # enter your API key here\n  \n# Import Data ----\noriginal_locations_tbl <- readr::read_csv(file =\n\"http://www.education.vic.gov.au/Documents/about/research/datavic/dv165-allschoolslocationlist2015.csv\") %>% \n                          janitor::clean_names()\n\n\n\n# limit the address data to schools in the Greater Melbourne local government area's\ncouncils <- c(\"Bayside (C)\", \"Port Phillip (C)\", \"Stonnington (C)\", \"Casey (C)\", \"Melbourne (C)\", \n              \"Frankston (C)\", \"Glen Eira (C)\", \"Monash (C)\", \"Yarra (C)\", \"Moonee Valley (C)\")\n\n\n# create an address dataset\naddresses_tbl <- original_locations_tbl %>% \n  \n  # create and format the home address field, and create the old and new workplace addresses\n  dplyr::mutate(\n    home_address = base::paste0(address_line_1, \", \", address_town, \" \", address_state, \" \",address_postcode),\n    old_work_address = \"154 High St, Ashburton VIC 3147\",\n    new_work_address = \"Spring St, East Melbourne VIC 3002\",\n    employee         = paste0(\"Employee \", row_number())  \n    ) %>% \n  \n  # only include addresses from areas around Melbourne\n  dplyr::filter(lga_name %in% councils) %>% \n  \n  # randomly select 100 records\n  dplyr::sample_n(100) %>% \n  \n  dplyr::select(employee, home_address, old_work_address, new_work_address)\n  \n\n\n# check the dataset\n# head(addresses_tbl)\n\n\n# call Google Maps using googleway to calculate the distance and time for the old and new workplace locations\n# the calculations are repeated for both public transport and car modes of transport\ncommute_tbl <- addresses_tbl %>%\n\n  dplyr::mutate(\n        old_transit_calculations = purrr::map2(.x = home_address,\n                                               .y = old_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"transit\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        new_transit_calculations = purrr::map2(.x = home_address,\n                                               .y = new_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"transit\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        old_car_calculations     = purrr::map2(.x = home_address,\n                                               .y = old_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"driving\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE)),\n\n        new_car_calculations     = purrr::map2(.x = home_address,\n                                               .y = new_work_address,\n                                               .f = ~ googleway::google_distance(origins      = .x,\n                                                                                 destinations = .y,\n                                                                                 mode         = \"driving\",\n                                                                                 key          = key,\n                                                                                 simplify     = TRUE))\n\n    )\n```\n:::\n\n\n<br>\n\n## 2. Unpacking the Data\n\nThe data returned from the google_distance function is complicated! Consequently, it required some fiddling to unpack and format in a usable fashion. While the approach developed works, I strongly suspect it could be better. Searching online has yielded several alternatives. However, I decided to stay with my own and welcome suggested improvements.\n\n\n::: {.cell code_folding='true'}\n\n```{.r .cell-code}\n# cleaning function for results\nresults_cleaner <- function(data, old_or_new, car_or_transit){\n    \n    # for renaming multiple variables from the API call\n    var_string <- paste0(old_or_new, \"_\", car_or_transit, \"_\")\n    # for renaming the status field\n    new_name   <- paste0(var_string, \"status\")\n    \n    # receive the data\n    data |> \n        rrapply::rrapply(how = \"bind\") |> \n        janitor::clean_names() |> \n        dplyr::select(-1, -2, -7) |> # remove the last two columns\n        dplyr::rename_at(vars(starts_with(\"rows_elements_1_\")), ~ str_replace_all(., \n                                                                              pattern     = \"rows_elements_1_\",\n                                                                              replacement = var_string) \n                                                                              ) |> \n        dplyr::rename( !! quo_name(new_name) := status)\n        \n}\n\n\n# clean the final results for the old commute by public transport\nold_transit_commute_tbl <- commute_tbl %>%\n    dplyr::select(old_transit_calculations) %>%\n    results_cleaner(old_or_new = \"old\", car_or_transit = \"transit\")\n\n\n# clean the final results for the new commute by public transport\nnew_transit_commute_tbl <- commute_tbl %>%\n    dplyr::select(new_transit_calculations) %>%\n    results_cleaner(old_or_new = \"new\", car_or_transit = \"transit\")\n\n# clean the final results for the old commute by car\nold_car_commute_tbl <- commute_tbl %>%\n    dplyr::select(old_car_calculations) %>%\n    results_cleaner(old_or_new = \"old\", car_or_transit = \"car\")\n\n\n# clean the final results for the old commute by car\nnew_car_commute_tbl <- commute_tbl %>%\n    dplyr::select(new_car_calculations) %>%\n    results_cleaner(old_or_new = \"new\", car_or_transit = \"car\")\n\n\n\n\n# connect the original data with the new clean distance and time results\ntotal_commute_tbl <- addresses_tbl %>%\n    dplyr::bind_cols(old_transit_commute_tbl) %>% # add the columns of the old commute by public transport\n    dplyr::bind_cols(new_transit_commute_tbl) %>% # add the columns of the new commute by public transport\n    dplyr::bind_cols(old_car_commute_tbl) %>% # add the columns of the old commute by car\n    dplyr::bind_cols(new_car_commute_tbl) %>% # add the columns of the new commute by car\n\n    # filter out any results that were not OK\n    dplyr::filter(old_transit_status == \"OK\" | \n                  new_transit_status == \"OK\" | \n                  old_car_status     == \"OK\" | \n                  new_car_status     == \"OK\")\n```\n:::\n\n\n<br>\n\n## 3. Creating Insights\n\nThe data returned from googleway provides both the travel distance between the two points, and time required to complete the trip for the selected mode of transit. From here it is important to gauge the following:\n\n<br>\n\n#### 1. Are people generally better off travelling to the new office location?\n\nThis can be examined by both distance and time. However, in a city a short trip can still take considerable time. Therefore, examining the difference in time taken for the shortest option (i.e., car or public transport) appears more realistic / accurate. If the time decreased by more than 5 minutes, an improvement in commute is assumed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate value in Minutes (default results are in seconds)\nscale_mins <- function(x){\n  x <- x / 60 \n  round(x, digits = 0)\n}\n\n\n# calculate value in Kilometres (default results are in metres)\nscale_kms <- function(x){\n  x <- x / 1000\n  round(x, digits = 1)\n} \n\n\n\n\nfinal_commute_details_tbl <- total_commute_tbl |> \n    \n    # covert all duration variable values to minutes\n    dplyr::mutate_at(vars(ends_with(\"duration_value\")), scale_mins) %>% \n    \n      \n    # covert all distance variable values to kilometres\n    dplyr::mutate_at(vars(ends_with(\"distance_value\")), scale_kms) %>% \n  \n    # calculate the difference in distance and time between the new and old locations\n    # NOTE: calculations are based on new - old. Therefore, negative numbers indicate less distance and time, \n    # whereas positive numbers indicate an increase in distance and time\n    dplyr::mutate(\n        diff_transit_commute_distance = new_transit_distance_value - old_transit_distance_value,\n        diff_transit_commute_time     = new_transit_duration_value - old_transit_duration_value,\n        diff_car_commute_distance     = new_car_distance_value - old_car_distance_value,\n        diff_car_commute_time         = new_car_duration_value - old_car_duration_value,\n\n        # find the shortest time (i.e., transit or car) for both the old and new offices\n        old_office_min_mins = base::ifelse(old_transit_duration_value < old_car_duration_value, \n                                           old_transit_duration_value, old_car_duration_value),\n        new_office_min_mins = base::ifelse(new_transit_duration_value < new_car_duration_value, \n                                           new_transit_duration_value, new_car_duration_value),\n        \n        # find the differences in the best commute times between the two locations\n        new_office_best_commute_diff = new_office_min_mins - old_office_min_mins,\n        \n        # find which is the better commute for each person (new office, old office, or similar). This assumes \n        # that a commute is better if the commute time is reduced by more than 5 minutes\n        preferred_commute_location   = dplyr::case_when((old_office_min_mins - new_office_min_mins) < -5 ~ \"Old Office\",\n                                                        (new_office_min_mins - old_office_min_mins) < -5 ~ \"New Office\",\n                                                        TRUE ~ \"Similar Commute\"),\n        \n        # determine the best mode of transport for the new location\n        preferred_mode_transport     = base::ifelse(new_transit_duration_value <= new_car_duration_value, \"Public Transport\", \"Car\")\n                                        \n        )\n\n\n# visually represent the impact of the new location to travel time\nfinal_commute_details_tbl %>% \n  dplyr::count(preferred_commute_location) %>% \n  echarts4r::e_chart(preferred_commute_location) %>% \n  echarts4r::e_bar(n) %>% \n  echarts4r::e_labels(position = \"insideTop\") %>% \n  echarts4r::e_legend(show = FALSE) %>% \n  echarts4r::e_title(text = \"Preferred Office Location Based on Travel Time\",\n                     \"Preferred Location Is Defined by A Reduction In Travel Time Of More Than 5 Minutes\",\n                     left = \"10%\") %>% \n  echarts4r::e_tooltip() \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-bb6ce81f4995e59cba68\" style=\"width:100%;height:500px;\" class=\"echarts4r html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bb6ce81f4995e59cba68\">{\"x\":{\"theme\":\"\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"yAxis\":[{\"show\":true}],\"xAxis\":[{\"data\":[\"New Office\",\"Old Office\",\"Similar Commute\"],\"type\":\"category\",\"boundaryGap\":true}],\"legend\":{\"data\":[\"n\"],\"show\":false,\"type\":\"plain\"},\"series\":[{\"data\":[{\"value\":[\"New Office\",\" 5\"]},{\"value\":[\"Old Office\",\"66\"]},{\"value\":[\"Similar Commute\",\"29\"]}],\"name\":\"n\",\"type\":\"bar\",\"yAxisIndex\":0,\"xAxisIndex\":0,\"coordinateSystem\":\"cartesian2d\",\"label\":{\"show\":true,\"position\":\"insideTop\"}}],\"title\":[{\"left\":\"10%\",\"text\":\"Preferred Office Location Based on Travel Time\",\"subtext\":\"Preferred Location Is Defined by A Reduction In Travel Time Of More Than 5 Minutes\"}],\"tooltip\":{\"trigger\":\"item\"}},\"dispose\":true},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nThe visualisation above depicts how the location change will impact employee travel, and it appears the majority of individuals will be worse off when commuting to the new location.\n\n<br>\n\n#### 2. Which individuals will have shorter or longer travel times?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_commute_details_tbl %>% \n  \n  # select the preferred variables\n  dplyr::select(employee, home_address, preferred_commute_location, new_office_best_commute_diff,preferred_mode_transport, \n                new_transit_duration_value, diff_transit_commute_time, new_car_duration_value, \n                diff_car_commute_time) %>% \n  \n    dplyr::arrange(new_office_best_commute_diff) %>% \n  \n  # rename the variables for more readable output\n  dplyr::rename(\n                Employee = employee,\n                `Home Address`= home_address,\n                `Preferred Office` = preferred_commute_location,\n                `Commute Change (Mins)` = new_office_best_commute_diff,\n                `Preferred Transport for New Office` = preferred_mode_transport,\n                `Time via Public Transport (Mins)` = new_transit_duration_value,\n                `Public Transport Time Saving (Mins)` = diff_transit_commute_time,\n                `Time via Car (Mins)` = new_car_duration_value,\n                `Car Time Saving (Mins)` = diff_car_commute_time) %>% \n  \n  reactable::reactable(\n    # pagination and searching options\n    showPageSizeOptions = TRUE,\n    pageSizeOptions = c(5, 10, 25, 50, 100),\n    defaultPageSize = 5,\n    \n    # table formatting options\n    outlined = TRUE,\n    borderless = TRUE,\n    striped = TRUE,\n    resizable = TRUE,\n\n    # column width\n    columns = list(\n      Employee = reactable::colDef(minWidth = 150),\n      `Home Address` = reactable::colDef(minWidth = 175),\n      `Preferred Office` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Commute Change (Mins)` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Preferred Transport for New Office`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Time via Public Transport (Mins)`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Public Transport Time Saving (Mins)`  = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Time via Car (Mins)` = reactable::colDef(minWidth = 150, align = \"center\"),\n      `Car Time Saving (Mins)`= reactable::colDef(minWidth = 150, align = \"center\")\n    ),\n    \n    # theming changes    \n    theme = reactable::reactableTheme(\n      highlightColor = \"#f0f5f9\",\n      cellPadding = \"8px 12px\",\n      style = list(fontFamily = \"-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif\"))\n  )\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-f67334e016e512846751\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f67334e016e512846751\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Employee\":[\"Employee 485\",\"Employee 510\",\"Employee 2193\",\"Employee 53\",\"Employee 229\",\"Employee 572\",\"Employee 953\",\"Employee 1632\",\"Employee 1056\",\"Employee 2214\",\"Employee 600\",\"Employee 1560\",\"Employee 1721\",\"Employee 59\",\"Employee 1740\",\"Employee 1848\",\"Employee 711\",\"Employee 1455\",\"Employee 1385\",\"Employee 1910\",\"Employee 1130\",\"Employee 1726\",\"Employee 1831\",\"Employee 1517\",\"Employee 1055\",\"Employee 250\",\"Employee 1544\",\"Employee 1466\",\"Employee 358\",\"Employee 1756\",\"Employee 1847\",\"Employee 1748\",\"Employee 1291\",\"Employee 1782\",\"Employee 614\",\"Employee 703\",\"Employee 1687\",\"Employee 578\",\"Employee 2033\",\"Employee 2087\",\"Employee 800\",\"Employee 968\",\"Employee 2127\",\"Employee 1000\",\"Employee 1088\",\"Employee 918\",\"Employee 1987\",\"Employee 1707\",\"Employee 1029\",\"Employee 2063\",\"Employee 1174\",\"Employee 850\",\"Employee 2103\",\"Employee 1031\",\"Employee 1510\",\"Employee 839\",\"Employee 29\",\"Employee 682\",\"Employee 666\",\"Employee 575\",\"Employee 1167\",\"Employee 649\",\"Employee 1829\",\"Employee 1163\",\"Employee 1451\",\"Employee 1458\",\"Employee 1150\",\"Employee 1956\",\"Employee 1507\",\"Employee 620\",\"Employee 1502\",\"Employee 2208\",\"Employee 945\",\"Employee 329\",\"Employee 1787\",\"Employee 1300\",\"Employee 2211\",\"Employee 1184\",\"Employee 1074\",\"Employee 1407\",\"Employee 1478\",\"Employee 94\",\"Employee 752\",\"Employee 1412\",\"Employee 2097\",\"Employee 1766\",\"Employee 1567\",\"Employee 1591\",\"Employee 726\",\"Employee 812\",\"Employee 549\",\"Employee 1974\",\"Employee 735\",\"Employee 883\",\"Employee 899\",\"Employee 1356\",\"Employee 2066\",\"Employee 880\",\"Employee 976\",\"Employee 1339\"],\"Home Address\":[\"280 Pigdon Street, Carlton North VIC 3054\",\"Miller Street, Fitzroy North VIC 3068\",\"96 Barkly Street, NORTH FITZROY VIC 3068\",\"319 George Street, Fitzroy VIC 3065\",\"210 Errol Street, North Melbourne VIC 3051\",\"Yarralea Street, Alphington VIC 3078\",\"1 Tasma Street, Ascot Vale VIC 3032\",\"86 Anderson Street, SOUTH YARRA VIC 3141\",\"68-76 Davison Street, Richmond VIC 3121\",\"355 St Kilda Road, MELBOURNE VIC 3004\",\"597 St Kilda Road, Melbourne VIC 3004\",\"103 Wellington Street, FLEMINGTON VIC 3031\",\"17 Leslie Road, ESSENDON VIC 3040\",\"38 Raleigh Street, Essendon VIC 3040\",\"25-31 Edward Street, ESSENDON VIC 3040\",\"6 Teague Street, NIDDRIE VIC 3042\",\"Lloyd Street, Strathmore VIC 3041\",\"Quinn Grove, Keilor East VIC 3033\",\"400 Pascoe Vale Road, Strathmore VIC 3041\",\"34 Roberts Road, AIRPORT WEST VIC 3042\",\"25 Watt Street, Niddrie VIC 3042\",\"163 Rachelle Road, KEILOR EAST VIC 3033\",\"6 Aberfeldie Street, ESSENDON VIC 3040\",\"83 Danks Street, Albert Park VIC 3206\",\"85 Brighton Street, Richmond VIC 3121\",\"2B Brighton Road, St Kilda VIC 3182\",\"11 Westbury Street, ST KILDA EAST VIC 3183\",\"Yarra Boulevard, Richmond VIC 3121\",\"19 Windermere Crescent, Brighton VIC 3186\",\"90 Outer Crescent, BRIGHTON VIC 3186\",\"88 Hotham Street, ST KILDA EAST VIC 3183\",\"90 Centre Road, BRIGHTON EAST VIC 3187\",\"120 Marriage Road, Brighton East VIC 3187\",\"28 Sandham Street, ELSTERNWICK VIC 3185\",\"66 Landcox Street, Brighton East VIC 3187\",\"Holloway Road, Sandringham VIC 3191\",\"11 Fernhill Road Nth, SANDRINGHAM VIC 3191\",\"Arkaringa Crescent, Black Rock VIC 3193\",\"80 Golf Links Road, FRANKSTON SOUTH VIC 3199\",\"42 Whalley Drive, WHEELERS HILL VIC 3150\",\"10 Kalmia Street, Frankston VIC 3199\",\"Franciscan Avenue, Frankston VIC 3199\",\"3 New Holland Drive, CRANBOURNE EAST VIC 3977\",\"110 Duff Street, Cranbourne VIC 3977\",\"10 Gum Nut Drive, Langwarrin VIC 3910\",\"Silver Avenue, Frankston North VIC 3200\",\"Scott Street, CRANBOURNE VIC 3977\",\"49 Stanhope Street, MALVERN VIC 3144\",\"14-36 Lesdon Avenue, Cranbourne VIC 3977\",\"500 Soldiers Road, CLYDE NORTH VIC 3978\",\"Paterson Drive, Lynbrook VIC 3975\",\"Mallum Avenue, Frankston VIC 3199\",\"25 Broderick Road, CARRUM DOWNS VIC 3201\",\"David Collins Drive, Endeavour Hills VIC 3802\",\"15 Nurture Avenue, Cranbourne North VIC 3977\",\"30 Belvedere Road, Seaford VIC 3198\",\"24 Harmer Road, Hallam VIC 3803\",\"33 Klauer St, Seaford VIC 3198\",\"Brine Street, Hughesdale VIC 3166\",\"90 Cadles Road, Carrum Downs VIC 3201\",\"82S The Promenade, Narre Warren South VIC 3805\",\"Somerville Road, Hampton Park VIC 3976\",\"333 Centre Road, NARRE WARREN SOUTH VIC 3805\",\"9 New Holland Drive, Cranbourne East VIC 3977\",\"Bakers Road, Oakleigh South VIC 3167\",\"Silvertop Street, Frankston North VIC 3200\",\"Whites Lane, Glen Waverley VIC 3150\",\"104-108 Reema Boulevard, ENDEAVOUR HILLS VIC 3802\",\"45 Josephine Avenue, Narre Warren VIC 3805\",\"Worthing Road, Devon Meadows VIC 3977\",\"100 Clyde Road, Berwick VIC 3806\",\"485 Golf Links Road, LANGWARRIN SOUTH VIC 3911\",\"134-148 Whites Lane, Wheelers Hill VIC 3150\",\"15-31 A'beckett Road, Narre  Warren  North VIC 3804\",\"2 Mora Avenue, OAKLEIGH VIC 3166\",\"Stawell Street, Cranbourne VIC 3977\",\"122 Paterson Drive, LYNBROOK VIC 3975\",\"15 Silky Oak Drive, Cranbourne VIC 3977\",\"145 Coral Drive, Hampton Park VIC 3976\",\"Raphael Drive, Wheelers Hill VIC 3150\",\"Belar Avenue, Frankston VIC 3199\",\"1714 Dandenong Road, Clayton VIC 3168\",\"Grange Street, Oakleigh South VIC 3167\",\"76 Booran Road, Caulfield East VIC 3145\",\"6 Ellington Street, CAULFIELD SOUTH VIC 3162\",\"122 Jasper Road, BENTLEIGH VIC 3204\",\"172 Burke Road, GLEN IRIS VIC 3146\",\"842 Centre Road, BENTLEIGH EAST VIC 3165\",\"Abbotsford Avenue, Malvern East VIC 3145\",\"2 Walsh Street, Ormond VIC 3204\",\"37-45 Park Lane, Mount Waverley VIC 3149\",\"90 Darling Road, MALVERN EAST VIC 3145\",\"16 Tucker Road, Bentleigh VIC 3204\",\"33 Ashton Street, Glen Waverley VIC 3150\",\"55 Nottingham Street, Glen Waverley VIC 3150\",\"9 Lechte Road, Mount Waverley VIC 3149\",\"33 Raymond Street, ASHWOOD VIC 3147\",\"Cnr Palmerston & Drummond Sts, Carlton VIC 3053\",\"Cnr Nott & Pool Streets, Port Melbourne VIC 3207\",\"Cnr Gleadell & Highett Street, Richmond VIC 3121\"],\"Preferred Office\":[\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"New Office\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Old Office\",\"Similar Commute\",\"Similar Commute\",\"Similar Commute\"],\"Commute Change (Mins)\":[-15,-13,-13,-12,-11,-5,-4,-4,-4,-4,-4,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,0,2,2,3,4,4,5,5,6,7,8,8,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,14,15,15,15,16,18,18,\"NA\",\"NA\",\"NA\"],\"Preferred Transport for New Office\":[\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",\"Car\",null,null,null],\"Time via Public Transport (Mins)\":[34,19,20,14,28,42,34,25,19,22,28,33,40,46,49,58,55,75,43,63,64,72,48,34,27,33,34,24,54,52,36,54,62,43,51,64,54,66,116,106,116,124,158,152,127,112,150,49,153,95,132,116,118,100,147,106,73,93,54,108,137,134,148,162,77,101,89,89,145,105,123,140,100,90,67,149,132,96,94,115,101,75,72,54,44,56,51,81,56,38,55,52,52,67,69,56,57,\"NA\",\"NA\",\"NA\"],\"Public Transport Time Saving (Mins)\":[-39,-58,-55,-55,-34,-62,-40,-43,-32,-44,-40,-40,-46,-42,-42,-45,-46,-54,-46,-52,-52,-53,-45,-43,-17,-32,-31,-16,-34,-32,-25,-43,-41,-28,-19,-42,-43,-34,-30,33,-30,-30,-20,-21,-21,-18,-20,-9,-20,-24,-2,-42,-30,-13,-20,-23,-24,-11,8,-38,-20,-4,-21,-20,30,-12,12,-28,-20,-20,19,-22,12,-23,29,0,-2,-25,-6,6,-21,11,25,-17,-42,-25,19,30,20,-30,12,19,3,11,13,13,18,\"NA\",\"NA\",\"NA\"],\"Time via Car (Mins)\":[13,13,13,8,12,17,20,11,13,15,15,18,26,22,25,28,23,29,23,25,25,26,27,21,15,21,19,15,30,28,21,28,29,25,27,36,36,37,45,27,47,47,48,45,48,42,46,19,43,48,38,45,43,36,45,41,34,43,25,42,45,36,42,49,27,44,27,38,35,54,40,47,28,40,24,46,39,44,41,28,45,25,27,25,29,30,18,28,21,28,25,20,31,32,31,27,24,\"NA\",\"NA\",\"NA\"],\"Car Time Saving (Mins)\":[-15,-13,-13,-12,-11,-5,-4,-4,-4,-4,-4,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,0,2,2,3,4,4,5,5,6,7,8,8,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,14,15,15,15,16,18,18,\"NA\",\"NA\",\"NA\"]},\"columns\":[{\"accessor\":\"Employee\",\"name\":\"Employee\",\"type\":\"character\",\"minWidth\":150},{\"accessor\":\"Home Address\",\"name\":\"Home Address\",\"type\":\"character\",\"minWidth\":175},{\"accessor\":\"Preferred Office\",\"name\":\"Preferred Office\",\"type\":\"character\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Commute Change (Mins)\",\"name\":\"Commute Change (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Preferred Transport for New Office\",\"name\":\"Preferred Transport for New Office\",\"type\":\"character\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Time via Public Transport (Mins)\",\"name\":\"Time via Public Transport (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Public Transport Time Saving (Mins)\",\"name\":\"Public Transport Time Saving (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Time via Car (Mins)\",\"name\":\"Time via Car (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"},{\"accessor\":\"Car Time Saving (Mins)\",\"name\":\"Car Time Saving (Mins)\",\"type\":\"numeric\",\"minWidth\":150,\"align\":\"center\"}],\"resizable\":true,\"defaultPageSize\":5,\"showPageSizeOptions\":true,\"pageSizeOptions\":[5,10,25,50,100],\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"outlined\":true,\"borderless\":true,\"striped\":true,\"theme\":{\"highlightColor\":\"#f0f5f9\",\"cellPadding\":\"8px 12px\",\"style\":{\"fontFamily\":\"-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif\"}},\"dataKey\":\"4b7338b54b5f1cc971c34e9930925cff\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br>\n\nThe above table could readily be exported to Excel and delivered to Leaders, Managers, Transition Teams, HRBP's, etc., to help inform the delivery of personalised discussions with staff regarding proposed or upcoming changes. In addition, it could also help to inform the identification of voluntary flight risks, based on negative travel experiences associated with the move. Moreover, additional analyses could be performed on this data to help inform communication efforts (e.g., clustering to develop employee personas).\n\n<br>\n\n# Conclusion\n\nI often try to think of ways to prompt people to reach out to the People Analytics team for advice or assistance. One quick-fire way, based on this experience, is through automation. If colleagues are having to do things manually more than a dozen times (i.e., look up commute times on Google Maps), its likely the People Analytics Team can help. While automating work is not necessarily a core remit of People Analytics Team's, it can be a highly useful approach for building both credibility and goodwill among business colleagues (i.e., low actual effort, high perceived value), which can in turn lead to bigger opportunities for both parties. In addition, this approach (and related activities) represent useful activities that can be performed in support of new site selection during a due diligence phase (i.e., pre-selecting venues).\n\nIn this example we used a series of addresses to calculate travel distance and time between fictitious home and work addresses for different modes of transit. While using Google Maps programmatically is not without some learning required, I hope this example assists in making it more accessible to a broader range of users. Such functions can and should be used in advance of physical location changes to help proactively identify and mitigate distance-related challenges for all parties involved, both employees and consumers.\n\nHappy coding!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/echarts-en.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/ecStat.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-4.8.0/dataTool.min.js\"></script>\n<script src=\"../../site_libs/echarts4r-binding-0.4.4/echarts4r.js\"></script>\n<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-17.0.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-17.0.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\n<script src=\"../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}